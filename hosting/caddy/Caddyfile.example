# Local development with real domain and self-signed SSL certificates
# Since these domains point to 127.0.0.1, Let's Encrypt cannot validate them
# Using self-signed certificates instead

# Global options
{
  # Use internal CA for self-signed certificates
  auto_https disable_redirects
}

# Error handling snippet - reusable across all sites
(error_handling) {
  handle_errors {
    root * /var/www/html
    file_server
    rewrite * /error.html
  }
}

# Health check snippet - reusable with custom health URI
(health_check) {
  health_uri {args.0}
  health_interval 10s
  health_timeout 5s
}

# Main dashboard
local.existential.company {
  tls internal
  import error_handling
  reverse_proxy dashy:8080
}

# Nextcloud - gets its own clean subdomain
cloud.local.existential.company {
  tls internal
  import error_handling
  redir /.well-known/carddav /remote.php/dav/ 301
  redir /.well-known/caldav /remote.php/dav/ 301
  reverse_proxy nextcloud:80
}

# LibreChat
chat.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy librechat-client:80
}

# Docker management
portainer.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy portainer:9001
}

# Task management
tasks.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy vikunja:3456
}

# Workflow automation
windmill.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy windmill_server:8000
}

# IT Tools
tools.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy it-tools:80
}

# Database interface
db.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy nocodb:8080
}

# Object storage
storage.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy minio:9000
}

# Low-code platform
apps.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy appsmith:80
}

# Message queue management
queue.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy rabbitmq:15672
}

# Notifications
notify.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy ntfy:80
}

# Recipe management
recipes.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy mealie:9000
}

# Monitoring
monitor.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy uptime-kuma:3001
}

# Alternative low-code platform
build.local.existential.company {
  tls internal
  import error_handling
  reverse_proxy lowcoder-frontend:3000
}

# RabbitMQ Management at localhost/rabbitmq
localhost/rabbitmq* {
  reverse_proxy rabbitmq:15672
}

appflowy.local.existential.company {
  tls internal
  import error_handling
  
  # GoTrue authentication - strip /gotrue prefix
  handle_path /gotrue/* {
    reverse_proxy appflowy-gotrue:9999
  }
  
  # WebSocket connections
  handle /ws {
    reverse_proxy appflowy-cloud:8000 {
      # WebSocket upgrade headers
      header_up Upgrade {http.request.header.Upgrade}
      header_up Connection {http.request.header.Connection}
    }
  }
  
  # API endpoints with special handling
  handle /api/* {
    # Chat API - streaming responses, no buffering
    handle /api/chat* {
      reverse_proxy appflowy-cloud:8000 {
        flush_interval -1
      }
    }
    
    # Import API - large file uploads, extended timeouts
    handle /api/import* {
      reverse_proxy appflowy-cloud:8000 {
        transport http {
          dial_timeout 30s
          response_header_timeout 600s
        }
      }
      request_body {
        max_size 2GB
      }
    }
    
    # Workspace publish - large file uploads
    handle_path /api/workspace/*/publish {
      reverse_proxy appflowy-cloud:8000 {
        transport http {
          dial_timeout 30s
          response_header_timeout 300s
        }
      }
      request_body {
        max_size 256MB
      }
    }
    
    # All other API endpoints
    reverse_proxy appflowy-cloud:8000
  }
  
  # MinIO Web UI - strip /minio prefix
  handle_path /minio/* {
    reverse_proxy appflowy-minio:9001 {
      # WebSocket support for MinIO UI
      header_up Upgrade {http.request.header.Upgrade}
      header_up Connection {http.request.header.Connection}
    }
  }
  
  # MinIO API - strip /minio-api prefix, special host header
  handle_path /minio-api/* {
    reverse_proxy appflowy-minio:9000 {
      header_up Host "appflowy-minio:9000"
    }
  }
  
  # Admin console - rewrite /console to root
  handle_path /console* {
    reverse_proxy appflowy-admin-frontend:3000
  }
  
  # Main AppFlowy web interface (catch-all)
  handle {
    reverse_proxy appflowy-web:80
  }
}




# another_domain {
  # handle_path strips the uri prefix. EG: `uri strip_prefix /blog`
  # handle leaves the uri as is and passes it on

  # handle /n8n* {
  #   reverse_proxy n8n:5678 {
  #     header_down Strict-Transport-Security max-age=31536000;
  #   }
  # }

  # reverse_proxy nextcloud:80 {
  #   header_down Strict-Transport-Security max-age=31536000;
  # }
# }
